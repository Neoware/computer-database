<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.excilys.formation</groupId>
	<artifactId>computer-database</artifactId>
	<packaging>war</packaging>
	<version>0.3</version>
	<name>computer-database</name>
	<url>https://github.com/Neoware/computer-database</url>
	<properties>
		<!-- Setting source and target to Java 8 -->
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<!-- Version of dependencies -->
		<dbip>localhost</dbip>
		<junit.version>4.12</junit.version>
		<mysql-connector-java.version>5.1.39</mysql-connector-java.version>
		<javax.servlet-api.version>3.1.0</javax.servlet-api.version>
		<slf4j-api.version>1.7.21</slf4j-api.version>
		<logback.version>1.1.7</logback.version>
		<commons-lang3.version>3.4</commons-lang3.version>
		<selenium-java.version>2.53.0</selenium-java.version>
		<jstl.version>1.2</jstl.version>
		<HikariCP.version>2.4.6</HikariCP.version>
	</properties>
	<reporting>
		<plugins>
			<!-- Plugin to use the checkstyle.xml during the build process -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<configLocation>checkstyle.xml</configLocation>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	<dependencies>
		<!-- TEST -->

		<!-- Junit dependency for unit and integration tests -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Selenium lib for integration tests -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium-java.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- JAVA EE -->

		<!-- Servlet api provided by Tomcat -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${javax.servlet-api.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Jstl lib to use it on jsp -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>

		<!-- DATABASE -->

		<!-- The mysql-connector in order to use JDBC with MySQL -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql-connector-java.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>${HikariCP.version}</version>
			<scope>compile</scope>
		</dependency>

		<!-- LOGGING -->

		<!-- SLf4J logging api -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j-api.version}</version>
		</dependency>
		<!-- Logback implementation of the SLF4J api -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- UTILS -->

		<!-- Utils lib to perform checks on strings etc -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
	</dependencies>
	<build>
	 <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
		<plugins>
			<!-- Plugin to package as war -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
