<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.excilys.formation</groupId>
	<artifactId>computer-database</artifactId>
	<packaging>pom</packaging>
	<version>0.6</version>
	<name>computer-database</name>
	<url>https://github.com/Neoware/computer-database</url>
	<modules>
		<module>core</module>
		<module>util</module>
		<module>console</module>
		<module>service</module>
		<module>persistence</module>
		<module>webapp</module>
	</modules>
	<properties>

		<!-- Setting source and target to Java 8 -->

		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<!-- Version of dependencies -->

		<cdb.version>0.6</cdb.version>
		<dbip>localhost</dbip>
		<junit.version>4.12</junit.version>
		<mysql-connector-java.version>5.1.39</mysql-connector-java.version>
		<javax.servlet-api.version>3.1.0</javax.servlet-api.version>
		<slf4j-api.version>1.7.21</slf4j-api.version>
		<logback.version>1.1.7</logback.version>
		<commons-lang3.version>3.4</commons-lang3.version>
		<selenium-java.version>2.53.0</selenium-java.version>
		<spring.version>4.3.0.RELEASE</spring.version>
		<jstl.version>1.2</jstl.version>
		<HikariCP.version>2.4.6</HikariCP.version>
		<HibernateValidator.version>5.2.4.Final</HibernateValidator.version>
		<hibernate.version>5.1.0.Final</hibernate.version>
		<spring-security.version>4.1.0.RELEASE</spring-security.version>
		<jcl.version>1.7.21</jcl.version>
		<jersey.version>2.23.1</jersey.version>
		<mockito.version>1.10.19</mockito.version>
	</properties>

	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>com.excilys.formation</groupId>
				<artifactId>cdb-core</artifactId>
				<version>${cdb.version}</version>
			</dependency>

			<dependency>
				<groupId>com.excilys.formation</groupId>
				<artifactId>cdb-util</artifactId>
				<version>${cdb.version}</version>
			</dependency>

			<dependency>
				<groupId>com.excilys.formation</groupId>
				<artifactId>cdb-console</artifactId>
				<version>${cdb.version}</version>
			</dependency>

			<dependency>
				<groupId>com.excilys.formation</groupId>
				<artifactId>cdb-persistence</artifactId>
				<version>${cdb.version}</version>
			</dependency>

			<dependency>
				<groupId>com.excilys.formation</groupId>
				<artifactId>cdb-service</artifactId>
				<version>${cdb.version}</version>
			</dependency>

			<dependency>
				<groupId>com.excilys.formation</groupId>
				<artifactId>cdb-webapp</artifactId>
				<version>${cdb.version}</version>
			</dependency>

			<!-- TEST -->

			<!-- Junit dependency for unit and integration tests -->

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- Mockito for mocking -->

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito.version}</version>
			</dependency>

			<!-- Selenium lib for integration tests -->

			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-java</artifactId>
				<version>${selenium-java.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- JAVA EE -->

			<!-- Servlet api provided by Tomcat -->

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${javax.servlet-api.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- Jstl lib to use it on jsp -->

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${jstl.version}</version>
			</dependency>

			<!-- DATABASE -->

			<!-- The mysql-connector in order to use JDBC with MySQL -->

			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql-connector-java.version}</version>
				<scope>runtime</scope>
			</dependency>

			<!-- HikariCP datapool -->

			<dependency>
				<groupId>com.zaxxer</groupId>
				<artifactId>HikariCP</artifactId>
				<version>${HikariCP.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate.version}</version>
			</dependency>

			<!-- SPRING -->

			<!--Base spring for DI -->

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Spring MVC -->

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- Spring for transaction -->

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>


			<!-- Spring module to work with databases -->

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- Spring security -->

			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-web</artifactId>
				<version>${spring-security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${spring-security.version}</version>
			</dependency>

			<!-- LOGGING -->

			<!-- SLf4J logging api bridge -->

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${jcl.version}</version>
			</dependency>

			<!-- Validation -->

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${HibernateValidator.version}</version>
			</dependency>

			<!-- Logback implementation of the SLF4J api -->

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>

			<!-- API -->

			<!-- Jersey server implementation of jax-rs -->

			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-server</artifactId>
				<version>${jersey.version}</version>
			</dependency>

			<!-- Jersey client implementation of jax-rs -->

			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-client</artifactId>
				<version>${jersey.version}</version>
			</dependency>

			<!-- Jackson plugin for jersey providing json serialization -->

			<dependency>
				<groupId>org.glassfish.jersey.media</groupId>
				<artifactId>jersey-media-json-jackson</artifactId>
				<version>${jersey.version}</version>
			</dependency>

			<!-- Defining servlet for jersey API -->

			<dependency>
				<groupId>org.glassfish.jersey.containers</groupId>
				<artifactId>jersey-container-servlet</artifactId>
				<version>${jersey.version}</version>
			</dependency>

			<!-- Necessary to use jersey with spring -->

			<dependency>
				<groupId>org.glassfish.jersey.ext</groupId>
				<artifactId>jersey-spring3</artifactId>
				<version>${jersey.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>spring-context</artifactId>
						<groupId>org.springframework</groupId>
					</exclusion>
					<exclusion>
						<artifactId>spring-beans</artifactId>
						<groupId>org.springframework</groupId>
					</exclusion>
					<exclusion>
						<artifactId>spring-core</artifactId>
						<groupId>org.springframework</groupId>
					</exclusion>
					<exclusion>
						<artifactId>spring-web</artifactId>
						<groupId>org.springframework</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jersey-server</artifactId>
						<groupId>org.glassfish.jersey.core</groupId>
					</exclusion>
					<exclusion>
						<artifactId>
                    jersey-container-servlet-core
                </artifactId>
						<groupId>org.glassfish.jersey.containers</groupId>
					</exclusion>
					<exclusion>
						<artifactId>hk2</artifactId>
						<groupId>org.glassfish.hk2</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- UTILS -->

			<!-- Utils lib to perform checks on strings etc -->

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>

			<!-- Plugin to package as war -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
